/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int sum=0;
    void sumUtils(TreeNode* root,string nside){
        // cout<<root->val<<" ";
        if(root->left==NULL && root->right==NULL && nside=="left")  {
            cout<<root->val<<" ";
            sum+=root->val;
            return;
        }
        if(root->left!=NULL)
            sumUtils(root->left,"left");
        if(root->right!=NULL)
            sumUtils(root->right,"right");      
    }
    int sumOfLeftLeaves(TreeNode* root) {
        sumUtils(root,"root");
        return sum;
    }
};
