//https://leetcode.com/problems/number-of-islands/

class Solution {
public:
    int count=0;
    int findIslands(vector<vector<char>>& grid, int i, int j){
        if( i<0 || j<0 || i>=grid.size() || j>=grid[0].size()|| grid[i][j]!='1' )
            return 0;
        grid[i][j]='0';
        return (findIslands(grid, i-1, j)+ findIslands(grid, i+1, j)+ findIslands(grid, i, j+1)+ findIslands(grid, i, j-1));
    }
    
    int numIslands(vector<vector<char>>& grid) {
        int count=0;
        for(int i=0; i< grid.size(); i++){
            for(int j=0; j<grid[0].size(); j++){
                if(grid[i][j]=='1'){
                    findIslands(grid, i, j);
                    count++;
                }
            }
        }
        return count;
    }
};

//time complexity : O(n*m)
//space complexity: O(1)
