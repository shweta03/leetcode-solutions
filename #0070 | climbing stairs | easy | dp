// https://leetcode.com/problems/climbing-stairs

class Solution {
public:
    int climbStairs(int n) {
        //if the no. of stairs==1
        if(n==1)
            return 1;
            
        vector<int> dp(n+1,0);
        //calculate the possible no. of ways for stair ==1, and stair ==2...........
        //a similar problem can have different no. of stairs.
        dp[1]=1;
        dp[2]=2;
        
        //the numberof ways for n stairs will be equal to sum of no. of ways for n-1 stairs + no. of ways for n-2 
        for(int i=3; i<=n; i++){
            dp[i]=dp[i-1]+dp[i-2];
        }
        
        return dp[n];
    }
};


//time complexity: O(n)
//space complexity: O(n)
